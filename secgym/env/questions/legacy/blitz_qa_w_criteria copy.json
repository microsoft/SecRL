[
    {
        "question": "Find OneNote executing `mshta` across all endpoints",
        "golden_query": "DeviceProcessEvents\n| where TimeGenerated between (datetime(2023-06-22T00:00:00) .. datetime(2023-06-23T00:00:00))\n| where InitiatingProcessVersionInfoOriginalFileName == 'OneNote.exe'\n| where ProcessVersionInfoOriginalFileName == 'MSHTA.EXE'",
        "tags": [
            "NLtoKQL"
        ],
        "comments": "The problem is very good. I think besides evaluating the query, we should evaluate the output (dataframe) of the query as well."
    },
    {
        "question": "Find `mshta` which then executes another process that makes a network connection",
        "golden_query": "DeviceProcessEvents\n| where TimeGenerated between (datetime(2023-06-22T00:00:00) .. datetime(2023-06-23T00:00:00))\n| where InitiatingProcessVersionInfoOriginalFileName == 'MSHTA.EXE'\n| join kind=inner ( \n    DeviceNetworkEvents \n    | where TimeGenerated between (datetime(2023-06-22T00:00:00) .. datetime(2023-06-23T00:00:00))\n    | extend ProcessId = InitiatingProcessId \n) on ProcessId",
        "tags": [
            "NLtoKQL"
        ],
        "comments": "same as above."
    },
    {
        "context": "One of the first alerts in an incident report is related to a `ONENOTE.EXE` file executing some code. It seems to be potentially part of the threat actor's initial access tradecraft.",
        "question": "Can you find the relevant log(s) and analyze what happened?",
        "answer": "We can see that the `OneNote` document exported an HTA (HTML Application) file named `Urukhai.hta` which is then launched by `mshta` (Microsoft HTML Application Host).",
        "step": "02",
        "tags": [
            "open-ended"
        ],
        "comments": "The problem here if we ignore the context is quite generic. Answer makes sense.",
        "key_terms": {
            "in_question": [
                "ONENOTE.EXE"
            ],
            "in_answer_but_not_question": [
                "OneNote document",
                "HTA file",
                "Urukhai.hta",
                "mshta"
            ]
        },
        "rubric": [
            {
                "point": "The answer states that a 'OneNote document' was involved.",
                "weight": 0.2
            },
            {
                "point": "The answer mentions that an 'HTA' (HTML Application) file was exported.",
                "weight": 0.3
            },
            {
                "point": "The answer specifies the name of the HTA file as 'Urukhai.hta'.",
                "weight": 0.2
            },
            {
                "point": "The answer notes that the HTA file was launched using 'mshta' (Microsoft HTML Application Host).",
                "weight": 0.3
            }
        ]
    },
    {
        "context": "We can see that a `OneNote` document exported an `HTA` (HTML Application) file named `Urukhai.hta` which is then launched by `mshta` (Microsoft HTML Application Host).",
        "question": "What process was spawned from `mshta` and what did the process do?",
        "answer": "`PowerShell` was spawned. 1. Set the execution policy to unrestriced and hides the window, 2. download the `Invode-DoorBreach.ps1` script, 3. import the downloaded script as a module, 4. Executes the `invoke-DoorBreach` function.",
        "step": "02",
        "tags": [
            "open-ended"
        ],
        "comments": "This is good.",
        "key_terms": {
            "in_question": [
                "mshta",
                "HTA",
                "Urukhai.hta"
            ],
            "in_answer_but_not_question": [
                "PowerShell",
                "Invode-DoorBreach.ps1",
                "invoke-DoorBreach"
            ]
        },
        "rubric": [
            {
                "point": "The answer states that 'PowerShell' was spawned.",
                "weight": 0.4
            },
            {
                "point": "The answer mentions that the execution policy was set to unrestricted and the window was hidden.",
                "weight": 0.2
            },
            {
                "point": "The answer mentions that the 'Invode-DoorBreach.ps1' script was downloaded.",
                "weight": 0.2
            },
            {
                "point": "The answer mentions that the downloaded script was imported as a module.",
                "weight": 0.1
            },
            {
                "point": "The answer states that the 'Invoke-DoorBreach' function was executed.",
                "weight": 0.1
            }
        ]
    },
    {
        "step": 2,
        "context": "We found a Silver command and control (C2) connection established.",
        "question": "How did the attacker establish the C2 connection?",
        "answer": "The attacker established the C2 connection using the `Invoke-DoorBreach` script.",
        "tags": [
            "need_confirm"
        ],
        "comments": "This is perfect!",
        "key_terms": {
            "in_question": [
                "C2 connection"
            ],
            "in_answer_but_not_question": [
                "Invoke-DoorBreach"
            ]
        },
        "rubric": [
            {
                "point": "The answer states that 'Invoke-DoorBreach' is used to establish the C2 connection.",
                "weight": 1
            }
        ]
    },
    {
        "step": 2,
        "context": "We found an suspicious `Invoke-DoorBreach` script executed in the PowerShell logs.",
        "question": "Can you investigate with the evidence, and find what C2 (command and control) connection was used?",
        "answer": "The Sliver command and control (C2) connection was established.",
        "tags": [
            "need_confirm"
        ],
        "comments": "Good",
        "key_terms": {
            "in_question": [
                "Invoke-DoorBreach",
                "PowerShell logs",
                "evidence",
                "C2 connection"
            ],
            "in_answer_but_not_question": [
                "Sliver"
            ]
        },
        "rubric": [
            {
                "point": "The answer states that the C2 connection used was 'Sliver'.",
                "weight": 1
            }
        ]
    },
    {
        "step": 3,
        "context": "A suspicious `OneNote` file was found in the `Downloads` folder: `C:\\Users\\lrodriguez\\Downloads\\FestivalDeVina.one`.",
        "question": "How does it make it to the endpoint?",
        "answer": [
            "1. The file was downloaded by the `msedge.exe` process.",
            "2. The `msedge.exe` process was initiated by the `outlook.exe` process.",
            "3. We then verify that the link 'defenderatevet06-my.sharepoint.com/personal/sbeavers_peanutrecords_com/_layouts/15/download.aspx' is part of a phishing email",
            "4. We find the phishing email was sent by `sbeavers@peanutrecords.com`. We can infer that `Stevie Beavers` was compromised first or it is an insider job."
        ],
        "tags": [
            "hard",
            "Multi-Step"
        ],
        "comments": "Perfect for hard multi step eval. This should be one of the higher standard of questions we have in the dataset.",
        "key_terms": {
            "in_question": [
                "OneNote",
                "Downloads folder"
            ],
            "in_answer_but_not_question": [
                "msedge.exe",
                "outlook.exe",
                "defenderatevet06-my.sharepoint.com",
                "sbeavers@peanutrecords.com",
                "Stevie Beavers"
            ]
        },
        "rubric": [
            {
                "point": "The answer states that the file was downloaded by the 'msedge.exe' process.",
                "weight": 0.2
            },
            {
                "point": "The answer states that the 'msedge.exe' process was initiated by the 'outlook.exe' process.",
                "weight": 0.2
            },
            {
                "point": "The answer mentions the link 'defenderatevet06-my.sharepoint.com/personal/sbeavers_peanutrecords_com/_layouts/15/download.aspx' is part of a phishing email.",
                "weight": 0.2
            },
            {
                "point": "The answer mentions the phishing email was sent by 'sbeavers@peanutrecords.com'.",
                "weight": 0.2
            },
            {
                "point": "The answer suggests that 'Stevie Beavers' was either compromised or is an insider.",
                "weight": 0.2
            }
        ]
    },
    {
        "step": 3,
        "context": "A suspicious `OneNote` file was found in the `Downloads` folder: `C:\\Users\\lrodriguez\\Downloads\\FestivalDeVina.one`.",
        "question": "How was the file `FestivalDeVina.one` downloaded?",
        "answer": "The file `FestivalDeVina.one` was downloaded by the `msedge.exe` process.",
        "comments": "WHy no tag here? Seems like {confirm} tag?",
        "key_terms": {
            "in_question": [
                "OneNote",
                "Downloads",
                "FestivalDeVina.one"
            ],
            "in_answer_but_not_question": [
                "msedge.exe"
            ]
        },
        "rubric": [
            {
                "point": "The answer states that the 'FestivalDeVina.one' file was downloaded by the 'msedge.exe' process.",
                "weight": 1
            }
        ]
    },
    {
        "step": 3,
        "context": "A suspicious `OneNote` file was found in the `Downloads` folder: `C:\\Users\\lrodriguez\\Downloads\\FestivalDeVina.one`.",
        "question": "We suspect this file was downloaded from a phishing email. Can you confirm this and find the sender of the email?",
        "answer": "The sender email is \"sbeavers@peanutrecords.com\". ",
        "tags": [
            "hard"
        ],
        "comments": "good",
        "key_terms": {
            "in_question": [
                "OneNote file",
                "Downloads folder",
                "phishing email",
                "sender of the email"
            ],
            "in_answer_but_not_question": [
                "sbeavers@peanutrecords.com"
            ]
        },
        "rubric": [
            {
                "point": "The answer confirms that the OneNote file was downloaded from a phishing email.",
                "weight": 0.5
            },
            {
                "point": "The answer states the sender email is 'sbeavers@peanutrecords.com'.",
                "weight": 0.5
            }
        ]
    },
    {
        "step": 3,
        "context": "A suspicious `OneNote` file was downloaded from the `msedge.exe` process.",
        "question": "What process initiated the browser to download the `OneNote`? What does this indicate?",
        "answer": "The process `outlook.exe` initiated `msedge.exe` to open the URL, indicating a likely phishing email.",
        "comments": "good. Why no tags here?",
        "key_terms": {
            "in_question": [
                "OneNote",
                "msedge.exe",
                "process",
                "download"
            ],
            "in_answer_but_not_question": [
                "outlook.exe",
                "phishing email"
            ]
        },
        "rubric": [
            {
                "point": "The answer states that 'outlook.exe' initiated 'msedge.exe'.",
                "weight": 0.6
            },
            {
                "point": "The answer indicates that this is likely a phishing email.",
                "weight": 0.4
            }
        ]
    },
    {
        "step": 3,
        "context": "",
        "question": "Can you check where the suspicious link 'defenderatevet06-my.sharepoint.com/personal/sbeavers_peanutrecords_com/_layouts/15/download.aspx' was clicked?",
        "answer": "We can run the following query to validate that the link was clicked in the context of an email being delivered as part of a phishing campaign.",
        "golden_query": [
            "\nlet url = \"defenderatevet06-my.sharepoint.com/personal/sbeavers_peanutrecords_com/_layouts/15/download.aspx\";\nUrlClickEvents\n| where TimeGenerated between (datetime(2023-06-22T00:00:00) .. datetime(2023-06-23T00:00:00))\n| where Workload == 'Email'\n| where ActionType == 'ClickAllowed'\n| where Url has url\n",
            "let url = \"defenderatevet06-my.sharepoint.com/personal/sbeavers_peanutrecords_com/_layouts/15/download.aspx\";\nUrlClickEvents\n| where TimeGenerated between (datetime(2023-06-22T00:00:00) .. datetime(2023-06-23T00:00:00))\n| where Workload == 'Email'\n| where ActionType == 'ClickAllowed'\n| where Url has url\n| join kind=inner ( \n    EmailUrlInfo \n    | where TimeGenerated between (datetime(2023-06-22T00:00:00) .. datetime(2023-06-23T00:00:00)) \n) on NetworkMessageId\n| project-reorder UrlLocation,UrlDomain,Url1"
        ],
        "comments": "Why 2 queries here?",
        "key_terms": {
            "in_question": [
                "suspicious link",
                "defenderatevet06-my.sharepoint.com",
                "clicked"
            ],
            "in_answer_but_not_question": [
                "query",
                "email",
                "phishing campaign"
            ]
        },
        "rubric": [
            {
                "point": "The answer states that a query can be run to check if the link was clicked.",
                "weight": 0.4
            },
            {
                "point": "The answer mentions that the link was clicked in the context of an email.",
                "weight": 0.3
            },
            {
                "point": "The answer mentions that the email was part of a phishing campaign.",
                "weight": 0.3
            }
        ]
    },
    {
        "step": 3,
        "context": "We suspect the link clicked is part of a phishing email: defenderatevet06-my.sharepoint.com/personal/sbeavers_peanutrecords_com/_layouts/15/download.aspx",
        "question": "Can you identify the sender of the phishing email that contained the malicious URL?",
        "answer": [
            "1. We find the NetworkMessageId == '6e5740e4-5d51-4d17-574a-08db72e297c2'\n```kql\nlet url = \"defenderatevet06-my.sharepoint.com/personal/sbeavers_peanutrecords_com/_layouts/15/download.aspx\";\nUrlClickEvents\n| where TimeGenerated between (datetime(2023-06-22T00:00:00) .. datetime(2023-06-23T00:00:00))\n| where Workload == 'Email'\n| where ActionType == 'ClickAllowed'\n| where Url has url\n```",
            "2.The sender of the phishing email can be determined using:\n  ```kql\n  EmailEvents\n  | where TimeGenerated between (datetime(2023-06-22T00:00:00) .. datetime(2023-06-23T00:00:00))\n  | where NetworkMessageId == '6e5740e4-5d51-4d17-574a-08db72e297c2'\n  | project-reorder SenderFromAddress, RecipientEmailAddress\n  ```\n  The results show that `sbeavers@peanutrecords.com` sent the phishing email."
        ],
        "tags": [
            "hard",
            "Multi-Step"
        ],
        "comments": "Here the kql to find the sender is mixed up with the actual answer. Maybe we should separate them out? But looks good otherwise.",
        "key_terms": {
            "in_question": [
                "phishing email",
                "malicious URL"
            ],
            "in_answer_but_not_question": [
                "NetworkMessageId",
                "EmailEvents",
                "sbeavers@peanutrecords.com"
            ]
        },
        "rubric": [
            {
                "point": "The answer references 'NetworkMessageId' as part of the identification process.",
                "weight": 0.2
            },
            {
                "point": "The answer includes the use of 'EmailEvents' in determining the sender.",
                "weight": 0.2
            },
            {
                "point": "The answer provides the actual sender email 'sbeavers@peanutrecords.com'.",
                "weight": 0.6
            }
        ]
    },
    {
        "step": 4,
        "context": "We found a malicious OneNote file `FestivalDeVina.one` was uploaded / created in the `sbeavers@peanutrecords.com` OneDrive and a download link was sent to `lrodriguez@peanutrecords.com`.",
        "question": "Please explore operations performed under the Microsoft OneDrive for Business and on Stevie's sharepoint folder. Based on the exploration, can you determine what API was used to upload the malicious OneNote file?",
        "answer": "the Microsoft Graph (00000003-0000-0000-c000-000000000000) API was used to perform this operation.",
        "comments": "good",
        "key_terms": {
            "in_question": [
                "Microsoft OneDrive for Business",
                "Stevie's sharepoint folder",
                "malicious OneNote file",
                "upload"
            ],
            "in_answer_but_not_question": [
                "Microsoft Graph",
                "00000003-0000-0000-c000-000000000000"
            ]
        },
        "rubric": [
            {
                "point": "The answer states that the Microsoft Graph API was used.",
                "weight": 0.5
            },
            {
                "point": "The answer specifies the API identifier '00000003-0000-0000-c000-000000000000'.",
                "weight": 0.5
            }
        ]
    },
    {
        "step": 5,
        "context": "We found that the Microsoft Graph (00000003-0000-0000-c000-000000000000) API was used to upload / create a malicious file 'FestivalDeVina.one' by 'sbeavers@peanutrecords.com'.",
        "question": "Can you check all the authentications specifying Microsoft Graph as the audience from this user?",
        "golden_query": "CloudAppEvents\n| where TimeGenerated between (datetime(2023-06-22T00:00:00) .. datetime(2023-06-23T00:00:00))\n| where ObjectName startswith 'https://defenderatevet06-my.sharepoint.com/personal/sbeavers_peanutrecords_com'\n| where Application == 'Microsoft OneDrive for Business'\n| where ObjectName endswith \"FestivalDeVina.one\"\n| extend EventData = parse_json(RawEventData)\n| extend Platform = EventData.Platform,ClientAppName = EventData.AppAccessContext.ClientAppName,\n    AppId = tostring(EventData.AppAccessContext.ClientAppId),APIId = tostring(EventData.AppAccessContext.APIId),\n    ClientIP = EventData.ClientIP,AuthenticationType = EventData.AuthenticationType,\n    CorrelationId = tostring(EventData.CorrelationId),OperationTimeGenerated = TimeGenerated\n| where AuthenticationType == 'OAuth'\n| join kind=inner ( \n    SigninLogs \n    | where TimeGenerated between (datetime(2023-06-22T00:00:00) .. datetime(2023-06-23T00:00:00))\n    | where Status.errorCode == 0\n    | extend AccountId = UserId, APIId = ResourceIdentity\n    | extend AuthTimeGenerated = TimeGenerated\n) on AccountId,AppId,APIId\n| project-reorder AuthTimeGenerated,OperationTimeGenerated,AuthenticationProtocol",
        "tags": [
            "NLtoKQL"
        ],
        "comments": "good."
    },
    {
        "step": 5,
        "context": "We now know that 'sbeavers@peanutrecords.com' authenticated Microsoft Graph (00000003-0000-0000-c000-000000000000) API to upload / create a malicious file 'FestivalDeVina.one'",
        "question": "We believe the attacker intiated the authentication through a phishing email. Can you find who sent the phishing email?",
        "answer": [
            "1. We first run the following query to look for those sign in events:\n```kql\n    CloudAppEvents\n| where TimeGenerated between (datetime(2023-06-22T00:00:00) .. datetime(2023-06-23T00:00:00))\n| where ObjectName startswith 'https://defenderatevet06-my.sharepoint.com/personal/sbeavers_peanutrecords_com'\n| where Application == 'Microsoft OneDrive for Business'\n| where ObjectName endswith \"FestivalDeVina.one\"\n| extend EventData = parse_json(RawEventData)\n| extend Platform = EventData.Platform,ClientAppName = EventData.AppAccessContext.ClientAppName,\n    AppId = tostring(EventData.AppAccessContext.ClientAppId),APIId = tostring(EventData.AppAccessContext.APIId),\n    ClientIP = EventData.ClientIP,AuthenticationType = EventData.AuthenticationType,\n    CorrelationId = tostring(EventData.CorrelationId),OperationTimeGenerated = TimeGenerated\n| where AuthenticationType == 'OAuth'\n| join kind=inner ( \n    SigninLogs \n    | where TimeGenerated between (datetime(2023-06-22T00:00:00) .. datetime(2023-06-23T00:00:00))\n    | where Status.errorCode == 0\n    | extend AccountId = UserId, APIId = ResourceIdentity\n    | extend AuthTimeGenerated = TimeGenerated\n) on AccountId,AppId,APIId\n| project-reorder AuthTimeGenerated,OperationTimeGenerated,AuthenticationProtocol\n```\nWe can see in the results that the only sign in event with those characteristics was performed via the Device Code Authentication Flow. This attack requires the attacker to send the legitimate device code verification Url https://microsoft.com/devicelogin in the body of the phishing email so that the user goes through the Device Code Authentication Flow.\n            ",
            "2. We can use the following query to look for evidence of this link: https://microsoft.com/devicelogin:\n```kql \nlet url = 'https://microsoft.com/devicelogin';\nsearch in (EmailUrlInfo,UrlClickEvents,DeviceNetworkEvents,DeviceFileEvents,DeviceEvents)\nTimeGenerated between (datetime(2023-06-22T00:00:00) .. datetime(2023-06-23T00:00:00))\nand (RemoteUrl has url\nor FileOriginUrl has url\nor FileOriginReferrerUrl has url\nor Url has url\n)\n| take 100\n| project-reorder TimeGenerated,Type,ActionType,UrlLocation,NetworkMessageId,\n    InitiatingProcessAccountUpn,AccountUpn,InitiatingProcessFileName\n            ```",
            "3. We can see in the results that the initial phishing email was sent by azure-noreply@microsoft.com, but it was categorized as Phish:[\"Spoof DMARC\"]. We found our true initial access."
        ],
        "tags": [
            "hard",
            "Multi-Step"
        ],
        "comments": "good",
        "key_terms": {
            "in_question": [
                "phishing email",
                "Microsoft Graph",
                "upload",
                "malicious file 'FestivalDeVina.one'",
                "authentication"
            ],
            "in_answer_but_not_question": [
                "Device Code Authentication Flow",
                "https://microsoft.com/devicelogin",
                "azure-noreply@microsoft.com",
                "Spoof DMARC"
            ]
        },
        "rubric": [
            {
                "point": "The answer describes the use of Device Code Authentication Flow.",
                "weight": 0.25
            },
            {
                "point": "The answer mentions the URL 'https://microsoft.com/devicelogin'.",
                "weight": 0.25
            },
            {
                "point": "The answer specifies that the initial phishing email was sent by 'azure-noreply@microsoft.com'.",
                "weight": 0.25
            },
            {
                "point": "The answer indicates that the email was categorized as 'Phish: \"Spoof DMARC\"'.",
                "weight": 0.25
            }
        ]
    },
    {
        "step": 5,
        "context": "We fine a malicious OneNote file `FestivalDeVina.one` was uploaded / created in the` sbeavers@peanutrecords.com`'s OneDrive.",
        "question": "Can you tell if this is an insider job, or a compromised account?",
        "answer": [
            "1. We explore operations performed under the `Microsoft OneDrive for Business` and on Stevie's sharepoint folder, and find that the file was created with `Microsoft Graph`.",
            "2. We then look into authentications specifying `Microsoft Graph` as the audience. We find that the only sign-in event with those characteristics was performed via the `Device Code Authentication Flow`. This indicates Stevie might have been part of a Device Code Phishing attack.",
            "3. This attack requires the attacker to send the legitimate device code verification Url `https://microsoft.com/devicelogin`. We look into emails and found that this link was part of a phishing email sent by `azure-noreply@microsoft.com`, but categorized as Phish:['Spoof DMARC'].",
            "4. We can confirm that this is a compromised account, and the attacker used a phishing email to compromise Stevie Beavers."
        ],
        "tag": [
            "hard",
            "Multi-Step"
        ],
        "comments": "good.",
        "key_terms": {
            "in_question": [
                "OneNote file",
                "FestivalDeVina.one",
                "sbeavers@peanutrecords.com",
                "OneDrive"
            ],
            "in_answer_but_not_question": [
                "Microsoft OneDrive for Business",
                "Microsoft Graph",
                "Device Code Authentication Flow",
                "Device Code Phishing",
                "https://microsoft.com/devicelogin",
                "phishing email",
                "azure-noreply@microsoft.com",
                "Spoof DMARC"
            ]
        },
        "rubric": [
            {
                "point": "The answer states that operations were performed under 'Microsoft OneDrive for Business' and on Stevie's SharePoint folder.",
                "weight": 0.1
            },
            {
                "point": "The answer mentions that the file was created with 'Microsoft Graph'.",
                "weight": 0.15
            },
            {
                "point": "The answer specifies that authentications used 'Microsoft Graph' as the audience.",
                "weight": 0.1
            },
            {
                "point": "The answer mentions the 'Device Code Authentication Flow'.",
                "weight": 0.15
            },
            {
                "point": "The answer indicates that Stevie was part of a 'Device Code Phishing' attack.",
                "weight": 0.1
            },
            {
                "point": "The answer states that the attack required sending a legitimate device code verification URL 'https://microsoft.com/devicelogin'.",
                "weight": 0.1
            },
            {
                "point": "The answer indicates that a phishing email from 'azure-noreply@microsoft.com' was sent.",
                "weight": 0.1
            },
            {
                "point": "The answer categorizes the phishing email as 'Spoof DMARC'.",
                "weight": 0.05
            },
            {
                "point": "The answer confirms that this is a compromised account.",
                "weight": 0.15
            }
        ]
    },
    {
        "step": 6,
        "question": "Write a query to explore all the network activity to IP address `192.168.3.5`.",
        "golden_query": "DeviceNetworkEvents\n| where Timestamp between (datetime(2023-09-22T00:00:00) .. datetime(2023-10-23T00:00:00))\n| where RemoteIP == '192.168.3.5'",
        "tags": [
            "NLtoKQL"
        ],
        "comments": "This can be part of general questions but good."
    },
    {
        "step": 7,
        "question": "Write a query to get all LDAP queries made by processes spawned by the SLiver binary DoorBreach.exe",
        "golden_query": "DeviceEvents\n| where TimeGenerated between (datetime(2023-06-22T00:00:00) .. datetime(2023-06-23T00:00:00))\n| where ActionType == 'LdapSearch'\n| where InitiatingProcessParentFileName == 'DoorBreach.exe'",
        "tags": [
            "NLtoKQL"
        ],
        "comments": "good. "
    },
    {
        "step": 8,
        "context": "We found that malicious script executed on 'WORKSTATION8.peanutrecords.com' downloaded a compressed file to the Windows Temp folder using a function `Get-Artillery`. The contents extracted to the ProgramData directory: C:\\ProgramData\\PRGPOs",
        "question": "Write a query to check if that folder was used in any scripts (i.e. PowerShell) on the same endpoint.",
        "golden_qeury": "WindowsEvent\n| where TimeGenerated between (datetime(2023-06-22T00:00:00) .. datetime(2023-06-23T00:00:00))\n| where Computer == 'WORKSTATION8.peanutrecords.com'\n| where Provider == 'Microsoft-Windows-PowerShell'\n| where EventID == 4104\n| extend ScriptBlockText = EventData.ScriptBlockText\n| where ScriptBlockText contains 'PRGPOs'\n| project-reorder TimeGenerated,ScriptBlockText",
        "tags": [
            "NLtoKQL"
        ],
        "comments": "good"
    },
    {
        "step": 8,
        "context": "We found that malicious script executed on 'WORKSTATION8.peanutrecords.com' downloaded a compressed file to the Windows Temp folder using a function `Get-Artillery`. The contents extracted to the ProgramData directory: C:\\ProgramData\\PRGPOs",
        "question": "Can you check on events to see if there are any other malicious behaviors regarding this folder?",
        "answer": "The folder contains a backed-up Group Policy Object (GPO) named `ManeuverWarfare` that gets imported via the `Import-GPO` PowerShell Cmdlet to the Domain and attach to the `Workstations` AD organizational unit. This allows the threat actor to spread specific settings to all endpoints in the domain.",
        "comments": "good",
        "key_terms": {
            "in_question": [
                "WORKSTATION8.peanutrecords.com",
                "Windows Temp folder",
                "Get-Artillery",
                "ProgramData",
                "C:\\ProgramData\\PRGPOs"
            ],
            "in_answer_but_not_question": [
                "backed-up Group Policy Object",
                "ManeuverWarfare",
                "Import-GPO",
                "Domain",
                "Workstations AD organizational unit",
                "spread specific settings"
            ]
        },
        "rubric": [
            {
                "point": "The answer mentions a backed-up Group Policy Object named 'ManeuverWarfare'.",
                "weight": 0.2
            },
            {
                "point": "The answer states that the GPO 'ManeuverWarfare' gets imported via the 'Import-GPO' PowerShell Cmdlet.",
                "weight": 0.2
            },
            {
                "point": "The answer mentions that the GPO is imported to the 'Domain'.",
                "weight": 0.2
            },
            {
                "point": "The answer states that the GPO is attached to the 'Workstations' AD organizational unit.",
                "weight": 0.2
            },
            {
                "point": "The answer notes that the importation allows the threat actor to spread specific settings to all endpoints in the domain.",
                "weight": 0.2
            }
        ]
    },
    {
        "step": 9,
        "context": "The folder contains a backed-up Group Policy Object (GPO) named `ManeuverWarfare` that gets imported via the `Import-GPO` PowerShell Cmdlet to the Domain and attach to the `Workstations` AD organizational unit. This allows the threat actor to spread specific settings to all endpoints in the domain.",
        "question": "Can you check if GPO is applied to the comprised endpoint 'WORKSTATION8.peanutrecords.com'?",
        "answer": "Yes. Query:\n```kql\nWindowsEvent\n| where TimeGenerated between (datetime(2023-06-22T00:00:00) .. datetime(2023-06-23T00:00:00))\n| where Computer == 'WORKSTATION8.peanutrecords.com'\n| where Provider == 'Microsoft-Windows-Sysmon'\n| where EventID == 13\n| where EventData.TargetObject startswith \n    \"HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Group Policy\\DataStore\\Machine\"\n| where EventData.Details == 'ManeuverWarfare' and EventData.EventType == 'SetValue'\n```,\n\"comments\": \"good\"\n",
        "key_terms": {
            "in_question": [
                "GPO",
                "WORKSTATION8.peanutrecords.com"
            ],
            "in_answer_but_not_question": [
                "WindowsEvent",
                "Sysmon",
                "EventID",
                "HKEY_LOCAL_MACHINE"
            ]
        },
        "rubric": [
            {
                "point": "The answer confirms that GPO is applied to the endpoint 'WORKSTATION8.peanutrecords.com'.",
                "weight": 0.25
            },
            {
                "point": "The query uses 'WindowsEvent' data.",
                "weight": 0.15
            },
            {
                "point": "The query filters events for 'Computer' equal to 'WORKSTATION8.peanutrecords.com'.",
                "weight": 0.15
            },
            {
                "point": "The query filters events where 'Provider' is 'Microsoft-Windows-Sysmon'.",
                "weight": 0.15
            },
            {
                "point": "The query filters events with 'EventID' 13.",
                "weight": 0.1
            },
            {
                "point": "The query filters events where 'EventData.TargetObject' starts with 'HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Group Policy\\DataStore\\Machine'.",
                "weight": 0.1
            },
            {
                "point": "The query filters events where 'EventData.Details' equals 'ManeuverWarfare' and 'EventData.EventType' equals 'SetValue'.",
                "weight": 0.1
            }
        ]
    },
    {
        "step": 9,
        "question": "Can you see if the threat actor potentially force a Group Policy update with built-in commands such as gpupdate on the compromised endpoint 'workstation8.peanutrecords.com'? What do you find?",
        "answer": "\n```kql\nDeviceProcessEvents\n| where TimeGenerated between (datetime(2023-06-22T00:00:00) .. datetime(2023-06-23T00:00:00))\n| where DeviceName == 'workstation8.peanutrecords.com'\n| where ProcessCommandLine contains 'gpupdate'\n| where InitiatingProcessCommandLine != 'svchost.exe -k netsvcs -p -s Schedule'\n| project-reorder TimeGenerated,ProcessCommandLine,InitiatingProcessCommandLine\n```\nWe can see that the threat actor was using LDAP queries to enumerate endpoints and WMI to force a Group Policy update on all of those endpoints",
        "comments": "good",
        "key_terms": {
            "in_question": [
                "Group Policy update",
                "gpupdate",
                "workstation8.peanutrecords.com"
            ],
            "in_answer_but_not_question": [
                "DeviceProcessEvents",
                "LDAP queries",
                "WMI"
            ]
        },
        "rubric": [
            {
                "point": "The answer includes a KQL query involving 'DeviceProcessEvents'.",
                "weight": 0.1
            },
            {
                "point": "The answer specifies the 'workstation8.peanutrecords.com' endpoint in the query.",
                "weight": 0.1
            },
            {
                "point": "The answer includes the 'ProcessCommandLine' containing 'gpupdate' in the query.",
                "weight": 0.1
            },
            {
                "point": "The answer excludes 'svchost.exe -k netsvcs -p -s Schedule' in the 'InitiatingProcessCommandLine' field in the query.",
                "weight": 0.1
            },
            {
                "point": "The answer mentions 'LDAP queries' being used by the threat actor.",
                "weight": 0.2
            },
            {
                "point": "The answer mentions 'WMI' being used by the threat actor.",
                "weight": 0.2
            },
            {
                "point": "The answer concludes that the threat actor forced a Group Policy update using built-in commands.",
                "weight": 0.2
            }
        ]
    },
    {
        "step": 10,
        "context": "Following the investigation, we can see a Suspicious Scheduled Task Process Launched alert which points to PowerShell executing a script.",
        "question": "Can you check what Scheduled Tasks were created?",
        "asnwer": "We can see the `BlitzConfig` scheduled task being created on all the workstations.",
        "comments": "good. Again without context the question is generic."
    }
]